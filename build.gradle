buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath "gradle.plugin.com.palantir:jacoco-coverage:0.4.0"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'com.palantir.jacoco-full-report'

group = 'mattcopas'
version = '0.0.6'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

docker {
	baseImage "frolvlad/alpine-oraclejdk8:slim"
	maintainer "Matt Copas"
}

task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName

	volume("/tmp")
	addFile("${jar.baseName}-${project.version}.jar", "app.jar")
	runCommand("sh -c 'touch /app.jar'")
	exposePort(8081)
	entryPoint([ "sh", "-c", "java -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=docker -jar /app.jar" ])

	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

bootRun {
	systemProperty('spring.profiles.active', 'dev')
}

jacocoTestReport {
	reports {
		xml.enabled = false
		csv.enabled = false
		html.enabled = true
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
	runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
